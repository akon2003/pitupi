<?php

$fd93bb7bba3arr=array("localhost","127.0.0.1","120.27.9.250","p2p.ynyaoqi.com");
$fd93bb7bba3host=$_SERVER["HTTP_HOST"];
$fd93bb7bba3host=explode(":",$fd93bb7bba3host);$fd93bb7bba3host=$fd93bb7bba3host[0];
$fd93bb7bba3bln=false;foreach($fd93bb7bba3arr as $fd93bb7bba3val){if(substr($fd93bb7bba3val,0,2)==="*."){if(preg_match("/".preg_quote(substr($fd93bb7bba3val,2))."$/",$fd93bb7bba3host)>0){$fd93bb7bba3bln=true;break;}}}if(!$fd93bb7bba3bln&&!in_array($fd93bb7bba3host,$fd93bb7bba3arr)){echo "domain not authorized";exit;}if (PHP_VERSION >= '5.0.0')
//���ڰ�װ�ļ��
if(!file_exists(APP_ROOT_PATH."public/install.lock") && function_exists("app_redirect"))
{
	app_redirect(APP_ROOT."/install/index.php");
}

if(file_exists(APP_ROOT_PATH.'system/config.php'))
	$sys_config = require APP_ROOT_PATH.'system/config.php';
	

function app_conf($name)
{
	if($name=="SITE_TITLE"){
		$name = "SHOP_TITLE";
	}
	return stripslashes($GLOBALS['sys_config'][$name]);
}


//����ʱ�����ü�����ʱ�亯��
if(function_exists('date_default_timezone_set'))
	date_default_timezone_set(app_conf('DEFAULT_TIMEZONE'));
//end ����ʱ�����ü�����ʱ�亯��

$define_file = APP_ROOT_PATH."system/definei.php"; 
if(file_exists($define_file))
	require_once $define_file; //���س�������
define('DB_PREFIX', app_conf('DB_PREFIX'));

$dist_cfg = APP_ROOT_PATH."system/dist_cfg.php";
if(file_exists($dist_cfg))
	$distribution_cfg = require_once $dist_cfg;

//���ڷֲ�ʽ����
$distribution_cfg["CACHE_TYPE"]	=	"File";	//File,Memcached,MemcacheSASL,Xcache,Db		
$distribution_cfg["CACHE_LOG"]	=	false;  //�Ƿ���Ҫ�ڱ��ؼ�¼cache��key�б�
$distribution_cfg["SESSION_TYPE"]	=	"File"; //"Db/MemcacheSASL/File"		
$distribution_cfg['ALLOW_DB_DISTRIBUTE']	=	false;  //�Ƿ�֧�ֶ�д����

$distribution_cfg["CSS_JS_OSS"]	=	false; //�ű���ʽ�Ƿ�ͬ����oss
$distribution_cfg["OSS_TYPE"]	=	""; //ͬ���ļ��洢������: ES_FILE,ALI_OSS,NONE �ֱ�Ϊԭes_file.phpͬ��,������OSS,�Լ���OSS�ֲ�		
$distribution_cfg["ORDER_DISTRIBUTE_COUNT"]	=	"0"; //�������Ƭ����
$distribution_cfg['DOMAIN_ROOT']	=	app_conf("DOMAIN_ROOT");  //������
$distribution_cfg['COOKIE_PATH']	=	'/';
//end �ֲ�ʽ


//���建��
if(!function_exists("load_local_cache"))
{
	function load_local_cache()
	{
		global $distribution_cfg;
		$type = $distribution_cfg["CACHE_TYPE"];
		$cacheClass = 'Cache'.ucwords(strtolower(strim($type)))."Service";
		if(file_exists(APP_ROOT_PATH."system/cache/".$cacheClass.".php"))
		{
			require_once APP_ROOT_PATH."system/cache/".$cacheClass.".php";
			if(class_exists($cacheClass))
			{
				$cache = new $cacheClass();
			}
			return $cache;
		}
		else
		{
			$file_cache_file = APP_ROOT_PATH.'system/cache/CacheFileService.php';
			if(file_exists($file_cache_file))
			require_once APP_ROOT_PATH.'system/cache/CacheFileService.php';
			if(class_exists("CacheFileService"))
				$cache = new CacheFileService();
			return $cache;
		}
	}
}

$cache_service_file = APP_ROOT_PATH."system/cache/Cache.php";
if(file_exists($cache_service_file))
	require_once $cache_service_file;
if(class_exists("CacheService"))
	$cache = CacheService::getInstance();
//end ���建��



//����DB
require APP_ROOT_PATH.'system/db/db.php';
if(!file_exists(APP_ROOT_PATH.'public/runtime/app/db_caches/'))
	mkdir(APP_ROOT_PATH.'public/runtime/app/db_caches/',0777);
$pconnect = false;
$db = new mysql_db(app_conf('DB_HOST').":".app_conf('DB_PORT'), app_conf('DB_USER'),app_conf('DB_PWD'),app_conf('DB_NAME'),'utf8',$pconnect);
//end ����DB


if(function_exists("update_sys_config"))
	update_sys_config();

//����ģ������
require  APP_ROOT_PATH.'system/template/template.php';
if(!file_exists(APP_ROOT_PATH.'public/runtime/app/tpl_caches/'))
	mkdir(APP_ROOT_PATH.'public/runtime/app/tpl_caches/',0777);	
if(!file_exists(APP_ROOT_PATH.'public/runtime/app/tpl_compiled/'))
	mkdir(APP_ROOT_PATH.'public/runtime/app/tpl_compiled/',0777);
$tmpl = new AppTemplate;

//end ����ģ������

require_once APP_ROOT_PATH.'system/utils/es_cookie.php';
require_once APP_ROOT_PATH."system/utils/es_session.php";

function get_http()
{
	return 'http://';
	return (isset($_SERVER['HTTPS']) && (strtolower($_SERVER['HTTPS']) != 'off')) ? 'https://' : 'http://';
}

function get_domain()
{
	/* Э�� */
	$protocol = get_http();

	/* ������IP��ַ */
	if (isset($_SERVER['HTTP_X_FORWARDED_HOST']))
	{
		$host = $_SERVER['HTTP_X_FORWARDED_HOST'];
	}
	elseif (isset($_SERVER['HTTP_HOST']))
	{
		$host = $_SERVER['HTTP_HOST'];
	}
	else
	{
		/* �˿� */
		if (isset($_SERVER['SERVER_PORT']))
		{
			$port = ':' . $_SERVER['SERVER_PORT'];

			if ((':80' == $port && 'http://' == $protocol) || (':443' == $port && 'https://' == $protocol))
			{
				$port = '';
			}
		}
		else
		{
			$port = '';
		}

		if (isset($_SERVER['SERVER_NAME']))
		{
			$host = $_SERVER['SERVER_NAME'] . $port;
		}
		elseif (isset($_SERVER['SERVER_ADDR']))
		{
			$host = $_SERVER['SERVER_ADDR'] . $port;
		}
	}

	return $protocol . $host;
}


function get_host()
{
	/* ������IP��ַ */
	if (isset($_SERVER['HTTP_X_FORWARDED_HOST']))
	{
		$host = $_SERVER['HTTP_X_FORWARDED_HOST'];
	}
	elseif (isset($_SERVER['HTTP_HOST']))
	{
		$host = $_SERVER['HTTP_HOST'];
	}
	else
	{
		if (isset($_SERVER['SERVER_NAME']))
		{
			$host = $_SERVER['SERVER_NAME'];
		}
		elseif (isset($_SERVER['SERVER_ADDR']))
		{
			$host = $_SERVER['SERVER_ADDR'];
		}
	}
	return $host;
}

if(!function_exists("filter_ma_request")){
	function filter_ma_request($str){
		$search = array("../","\n","\r","\t","\r\n","'","<",">","\"","%");
			
		return str_replace($search,"",$str);
	}
}

if(app_conf("URL_MODEL")==1)
{
	//��дģʽ
	$current_url = APP_ROOT;
	$current_file = explode("/",_PHP_FILE_);
	$current_file = $current_file[count($current_file)-1];
	if($current_file=='index.php'||$current_file=='shop.php')
	$app_index = "";
	else 
	$app_index = str_replace(".php","",$current_file);
	if($app_index!="")
	$current_url = $current_url."/".$app_index;
	
	$rewrite_param = $_REQUEST['rewrite_param'];
	$rewrite_param = explode("/",$rewrite_param);
	if($rewrite_param){
		foreach($rewrite_param as $k=>$param_item)
		{
			if($param_item!='')
			$rewrite_param_array[] = $param_item;
		}
	}
	if($rewrite_param_array){
		foreach ($rewrite_param_array as $k=>$v)
		{
			if(substr($v,0,1)=='-')
			{
				//��չ����
				$v = substr($v,1);
				$ext_param = explode("-",$v);
				foreach($ext_param as $kk=>$vv)
				{
					if($kk%2==0)
					{
						if(preg_match("/(\w+)\[(\w+)\]/",$vv,$matches))
						{
							$_GET[$matches[1]][$matches[2]] = $ext_param[$kk+1];
						}
						else
						$_GET[$ext_param[$kk]] = $ext_param[$kk+1];
						
						if($ext_param[$kk]!="p")
						{
							$current_url.=$ext_param[$kk];	
							$current_url.="-".$ext_param[$kk+1]."-";
						}
					}
				}			
			}
			elseif($k==0)
			{
				//����ctl��act
				$ctl_act = explode("-",$v);
				if($ctl_act[0]!='cid'&&$ctl_act[0]!='id'&&$ctl_act[0]!='aid'&&$ctl_act[0]!='qid'&&$ctl_act[0]!='pid'&&$ctl_act[0]!='cid'&&$ctl_act[0]!='a')
				{
					$_GET['ctl'] = $ctl_act[0];
					$_GET['act'] = $ctl_act[1];	
			
					$current_url.="/".$ctl_act[0];	
					if($ctl_act[1]!="")
					$current_url.="-".$ctl_act[1]."/";	
					else
					$current_url.="/";	
				}
				else
				{
					//��չ����
					$ext_param = explode("-",$v);
					foreach($ext_param as $kk=>$vv)
					{
						if($kk%2==0)
						{
							if(preg_match("/(\w+)\[(\w+)\]/",$vv,$matches))
							{
								$_GET[$matches[1]][$matches[2]] = $ext_param[$kk+1];
							}
							else
							$_GET[$ext_param[$kk]] = $ext_param[$kk+1];
							
							if($ext_param[$kk]!="p")
							{
								if($kk==0)$current_url.="/";
								$current_url.=$ext_param[$kk];	
								$current_url.="-".$ext_param[$kk+1]."-";	
							}
						}
					}
				}
				
			}elseif($k==1)
			{
				//��չ����
				$ext_param = explode("-",$v);
				foreach($ext_param as $kk=>$vv)
				{
					if($kk%2==0)
					{
						if(preg_match("/(\w+)\[(\w+)\]/",$vv,$matches))
						{
							$_GET[$matches[1]][$matches[2]] = $ext_param[$kk+1];
						}
						else
						$_GET[$ext_param[$kk]] = $ext_param[$kk+1];
						
						if($ext_param[$kk]!="p")
						{
							$current_url.=$ext_param[$kk];	
							$current_url.="-".$ext_param[$kk+1]."-";
						}
					}
				}			
			}
		}
	}
	$current_url = substr($current_url,-1)=="-"?substr($current_url,0,-1):$current_url;	
}
unset($_REQUEST['rewrite_param']);
unset($_GET['rewrite_param']);


$_REQUEST = array_merge($_GET,$_POST);
filter_request($_REQUEST);

$lang_file = APP_ROOT_PATH.'/app/Lang/'.app_conf("SHOP_LANG").'/lang.php';
if(file_exists($lang_file))
	$lang = require_once $lang_file;


function run_info()
{

	if(!SHOW_DEBUG)return "";

	$query_time = number_format($GLOBALS['db']->queryTime,6);

	if($GLOBALS['begin_run_time']==''||$GLOBALS['begin_run_time']==0)
	{
		$run_time = 0;
	}
	else
	{
		if (PHP_VERSION >= '5.0.0')
		{
			$run_time = number_format(microtime(true) - $GLOBALS['begin_run_time'], 6);
		}
		else
		{
			list($now_usec, $now_sec)     = explode(' ', microtime());
			list($start_usec, $start_sec) = explode(' ', $GLOBALS['begin_run_time']);
			$run_time = number_format(($now_sec - $start_sec) + ($now_usec - $start_usec), 6);
		}
	}

	/* �ڴ�ռ����� */
	if (function_exists('memory_get_usage'))
	{
		$unit=array('B','KB','MB','GB');
		$size = memory_get_usage();
		$used = @round($size/pow(1024,($i=floor(log($size,1024)))),2).' '.$unit[$i];
		$memory_usage = lang("MEMORY_USED",$used);
	}
	else
	{
		$memory_usage = '';
	}

	/* �Ƿ������� gzip */
	$enabled_gzip = (app_conf("GZIP_ON") && function_exists('ob_gzhandler'));
	$gzip_enabled = $enabled_gzip ? lang("GZIP_ON") : lang("GZIP_OFF");

	$str = lang("QUERY_INFO_STR",$GLOBALS['db']->queryCount, $query_time,$gzip_enabled,$memory_usage,$run_time);

	foreach($GLOBALS['db']->queryLog as $K=>$sql)
	{
		if($K==0)$str.="<br />SQL����б�";
		$str.="<br />��".($K+1).":".$sql;
	}

	return "<div style='width:940px; padding:10px; line-height:22px; border:1px solid #ccc; text-align:left; margin:30px auto; font-size:14px; color:#999; height:150px; overflow-y:auto;'>".$str."</div>";
}

function lang($key)
{
	$args = func_get_args();//ȡ�����д������������
	$key = strtoupper($key);
	if(isset($GLOBALS['lang'][$key]))
	{
		if(count($args)==1)
			return $GLOBALS['lang'][$key];
		else
		{
			$result = $key;
			$cmd = '$result'." = sprintf('".$GLOBALS['lang'][$key]."'";
			for ($i=1;$i<count($args);$i++)
			{
				$cmd .= ",'".$args[$i]."'";
			}
			$cmd.=");";
			eval($cmd);
			return $result;
		}
	}
	else
		return $key;
}


function adv_preg($r){
	return $GLOBALS['adv']['code'];
}


/**
 * �¸�������
 */
// ��ȡ��һ�����쳣,ĳ�²����ڵ�����ת��Ϊ����һ������
// ����û�е�����ת��Ϊ���һ��
// ���һ������,��������ʹ���ϴλ������ڵ������ڴ���
// @repay_start_time 
function next_replay_month($time,$m=1,$repay_start_time=0){
	$start_year = date('Y',$time);
	$start_month = date('m',$time);
	$start_day = date('d',$time);
	$time = date('H:i:s',$time);

	// ������һ�ڻ���ʱ�����
	if ($repay_start_time > 0) {
		$start_day = date('d',$repay_start_time);
	}

	$end_year = $start_year;
	$end_month = $start_month + $m;
	$end_day = $start_day;
	if ($end_month > 12) {
		$end_month -= 12;
		$end_year += 1;
	}

	if ($end_day > 28 && $end_month == 2) {
		if (($end_year % 400 == 0) || ($end_year % 100 != 0 && $end_year % 4 == 0)) {
			$end_day = 29;
		} else {
			$end_day = 28;
		}
	} else if ($end_day == 31 && ($end_month == 4 || $end_month == 6 || $end_month == 9 || $end_month == 11)) {
		$end_day = 30;
	}

	$end_time = strtotime($end_year.'-'.$end_month.'-'.$end_day.' '.$time);

	return $end_time;
	// begin 2016-7-13

	/*
	$str_t = to_timespan(to_date($time)." ".$m." month ");
	return $str_t;
	*/
}


/**
 * ��ȡ����ʱ�������·�/����
 * @param $start ��ʼʱ��
 * @param $end ����ʱ��
 * @return ����:total_days(������),month(�·���),days(��ȥ�·ݺ��ʣ������)
 */
function interval_monnth_and_days($start,$end) {
	if ($start > $end) { return null; }

	$start = strtotime(date('Y-m-d',$start));
	$end = strtotime(date('Y-m-d',$end));

	//�����������
	$total_days = intval(($end - $start) / (24 * 3600));
	$data['total_days'] = $total_days;
	$data['month'] = 0;
	$data['days'] = $total_days;

	//����һ����ʱ��
	if ($total_days < 28) { return $data; } 

	$max_month = intval($total_days / 30);
	for ($m=0; $m<$max_month; $m++) {
		if ($end < next_replay_month($start, $m+1, $start)) {
			$data['month'] = $m;
			$data['days'] = ($end - next_replay_month($start, $m, $start)) / (24 * 3600);
			break;
		} else if ($end == next_replay_month($start, $m+1, $start)) {
			$data['month'] = $m+1;
			$data['days'] = 0;
			break;
		}
	}

	return $data;	
}


/**
 * ��ȡ����ʱ����������
 * @param $start ��ʼʱ��
 * @param $end ����ʱ��
 * @return int:������
* Admin 2016-8-15
 */
function interval_days($start,$end) {
	$start = strtotime(date('Y-m-d',$start));
	$end = strtotime(date('Y-m-d',$end));

	//�����������
	$days = intval(($end - $start) / (24 * 3600));
	return $days;
}


/**
 * �ж���˵������Ƿ����
 */
function user_info_expire($u_info){
	$time = TIME_UTC;
	$expire_time = 6*30*24*3600;
	
	if($u_info['workpassed']==1){
		if(($time - $u_info['workpassed_time']) > $expire_time){
			$expire['workpassed_expire'] = 1;
		}
	}
	if($u_info['incomepassed']==1){
		if(($time - $u_info['incomepassed_time']) > $expire_time){
			$expire['incomepassed_expire'] = 1;
		}
	}
	if($u_info['creditpassed']==1){
		if(($time - $u_info['creditpassed_time']) > $expire_time){
			$expire['creditpassed_expire'] = 1;
		}
	}
	if($u_info['residencepassed']==1){
		if(($time - $u_info['residencepassed_time']) > $expire_time){
			$expire['residencepassed_expire'] = 1;
		}
	}
	
	return $expire;
}

/*��ʽ��ͳ��*/
function format_conf_count($number){
	if($number=="")
		return "0<em>.00</em>";
		
	$attr_number = explode(".",$number);
	
	return $attr_number[0]."<em>".(trim($attr_number[1]) == "" ? ".00" : ".".$attr_number[1])."</em>";
}


if(!function_exists("format_image_path"))
{
	function format_image_path($out)
	{
		//��ͼƬ·�����޸�
		if($GLOBALS['distribution_cfg']['OSS_TYPE']&&$GLOBALS['distribution_cfg']['OSS_TYPE']!="NONE")
		{
			$domain = $GLOBALS['distribution_cfg']['OSS_DOMAIN'];
		}
		else
		{
			$domain = SITE_DOMAIN.APP_ROOT;
		}
		$out = str_replace(APP_ROOT."./public/",$domain."/public/",$out);
		$out = str_replace("./public/",$domain."/public/",$out);
		return $out;
	
	}
}


/**
 * ������ͼƬͬ����Զ�̵�ͼƬ������
 * @param string $url ���ص�ͼƬ��ַ��"./public/......"
 */
if(!function_exists("syn_to_remote_image_server"))
{
	function syn_to_remote_image_server($url)
	{
		if($GLOBALS['distribution_cfg']['OSS_TYPE']&&$GLOBALS['distribution_cfg']['OSS_TYPE']!="NONE")
		{
			if($GLOBALS['distribution_cfg']['OSS_TYPE']=="ES_FILE")
			{
				$pathinfo = pathinfo($url);
				$file = $pathinfo['basename'];
				$dir = $pathinfo['dirname'];
				$dir = str_replace("./public/", "", $dir);
				$filefull = SITE_DOMAIN.APP_ROOT."/public/".$dir."/".$file;
				$syn_url = $GLOBALS['distribution_cfg']['OSS_DOMAIN']."/es_file.php?username=".$GLOBALS['distribution_cfg']['OSS_ACCESS_ID']."&password=".$GLOBALS['distribution_cfg']['OSS_ACCESS_KEY']."&file=".
						$filefull."&path=".$dir."/&name=".$file."&act=0";
				@file_get_contents($syn_url);
			}
			elseif($GLOBALS['distribution_cfg']['OSS_TYPE']=="ALI_OSS")
			{
				$pathinfo = pathinfo($url);
				$file = $pathinfo['basename'];
				$dir = $pathinfo['dirname'];
				$dir = str_replace("./public/", "public/", $dir);
					
				$ali_oss_sdk = APP_ROOT_PATH."system/alioss/sdk.class.php";
				if(file_exists($ali_oss_sdk))
				{
					require_once $ali_oss_sdk;
					
					if(class_exists("ALIOSS"))
					{
						$oss_sdk_service = new ALIOSS();
						//�����Ƿ��curl����ģʽ
						$oss_sdk_service->set_debug_mode(FALSE);
						
						$bucket = $GLOBALS['distribution_cfg']['OSS_BUCKET_NAME'];
						$object = $dir."/".$file;
						$file_path = APP_ROOT_PATH.$dir."/".$file;
						
						$oss_sdk_service->upload_file_by_file($bucket,$object,$file_path);
					}
					
				}				
			}
		}
	
	}
}

/**
 * ͬ���ű���ʽ���� $url:'public/runtime/statics/biz/'.$url.'.css';
 * @param unknown_type $url
 */
if(!function_exists("syn_to_remote_file_server"))
{
	function syn_to_remote_file_server($url)
	{
		if($GLOBALS['distribution_cfg']['OSS_TYPE']&&$GLOBALS['distribution_cfg']['OSS_TYPE']!="NONE")
		{
			if($GLOBALS['distribution_cfg']['OSS_TYPE']=="ES_FILE")
			{
				$pathinfo = pathinfo($url);
				$file = $pathinfo['basename'];
				$dir = $pathinfo['dirname'];
				$dir = str_replace("public/", "", $dir);
				$filefull = SITE_DOMAIN.APP_ROOT."/public/".$dir."/".$file;
				$syn_url = $GLOBALS['distribution_cfg']['OSS_DOMAIN']."/es_file.php?username=".$GLOBALS['distribution_cfg']['OSS_ACCESS_ID']."&password=".$GLOBALS['distribution_cfg']['OSS_ACCESS_KEY']."&file=".
						$filefull."&path=".$dir."/&name=".$file."&act=0";
				@file_get_contents($syn_url);
			}
			elseif($GLOBALS['distribution_cfg']['OSS_TYPE']=="ALI_OSS")
			{
				$pathinfo = pathinfo($url);
				$file = $pathinfo['basename'];
				$dir = $pathinfo['dirname'];
	
				$ali_oss_sdk = APP_ROOT_PATH."system/alioss/sdk.class.php";
				if(file_exists($ali_oss_sdk))
				{
					require_once $ali_oss_sdk;
					
					if(class_exists("ALIOSS"))
					{
						$oss_sdk_service = new ALIOSS();
						//�����Ƿ��curl����ģʽ
						$oss_sdk_service->set_debug_mode(FALSE);
			
						$bucket = $GLOBALS['distribution_cfg']['OSS_BUCKET_NAME'];
						$object = $dir."/".$file;
						$file_path = APP_ROOT_PATH.$dir."/".$file;
			
						$oss_sdk_service->upload_file_by_file($bucket,$object,$file_path);
					}					
				}
				
			}
		}
	
	}
}


//����session
if(!class_exists("FanweSessionHandler"))
{
	class FanweSessionHandler
	{
		private $savePath;
		private $mem;  //Memcacheʹ��
		private $db;	//���ݿ�ʹ��
		private $table; //���ݿ�ʹ��
	
		function open($savePath, $sessionName)
		{
			$this->savePath = APP_ROOT_PATH.$GLOBALS['distribution_cfg']['SESSION_FILE_PATH'];
			if($GLOBALS['distribution_cfg']['SESSION_TYPE']=="MemcacheSASL")
			{
				$this->mem = require_once APP_ROOT_PATH."system/cache/MemcacheSASL/MemcacheSASL.php";
				$this->mem = new MemcacheSASL;
				$this->mem->addServer($GLOBALS['distribution_cfg']['SESSION_CLIENT'], $GLOBALS['distribution_cfg']['SESSION_PORT']);
				$this->mem->setSaslAuthData($GLOBALS['distribution_cfg']['SESSION_USERNAME'],$GLOBALS['distribution_cfg']['SESSION_PASSWORD']);
			}
			elseif($GLOBALS['distribution_cfg']['SESSION_TYPE']=="Db")
			{
				$pconnect = false;
				$session_client = $GLOBALS['distribution_cfg']['SESSION_CLIENT']==""?app_conf('DB_HOST'):$GLOBALS['distribution_cfg']['SESSION_CLIENT'];
				$session_port = $GLOBALS['distribution_cfg']['SESSION_PORT']==""?app_conf('DB_PORT'):$GLOBALS['distribution_cfg']['SESSION_PORT'];
				$session_username = $GLOBALS['distribution_cfg']['SESSION_USERNAME']==""?app_conf('DB_USER'):$GLOBALS['distribution_cfg']['SESSION_USERNAME'];
				$session_password = $GLOBALS['distribution_cfg']['SESSION_PASSWORD']==""?app_conf('DB_PWD'):$GLOBALS['distribution_cfg']['SESSION_PASSWORD'];
				$session_db = $GLOBALS['distribution_cfg']['SESSION_DB']==""?app_conf('DB_NAME'):$GLOBALS['distribution_cfg']['SESSION_DB'];
				$this->db = new mysql_db($session_client.":".$session_port, $session_username,$session_password,$session_db,'utf8',$pconnect);
				$this->table = $GLOBALS['distribution_cfg']['SESSION_TABLE']==""?DB_PREFIX."session":$GLOBALS['distribution_cfg']['SESSION_TABLE'];
			}
			else
			{
				if (!is_dir($this->savePath)) {
					@mkdir($this->savePath, 0777);
				}
			}
			return true;
		}
	
		function close()
		{
			return true;
		}
	
		function read($id)
		{
			$sess_id = "sess_".$id;
			if($GLOBALS['distribution_cfg']['SESSION_TYPE']=="MemcacheSASL")
			{
				return $this->mem->get("$this->savePath/$sess_id");
			}
			elseif($GLOBALS['distribution_cfg']['SESSION_TYPE']=="Db")
			{
				$session_data = $this->db->getRow("select session_data,session_time from ".$this->table." where session_id = '".$sess_id."'",true);
				if($session_data['session_time']<TIME_UTC)
				{
					return false;
				}
				else
				{
					return $session_data['session_data'];
				}
			}
			else
			{
				$file = "$this->savePath/$sess_id";
				if (filemtime($file) + SESSION_TIME < time() && file_exists($file)) {
					@unlink($file);
				}
				$data = (string)@file_get_contents($file);
				return $data;
			}
		}
	
		function write($id, $data)
		{
	
			$sess_id = "sess_".$id;
			if($GLOBALS['distribution_cfg']['SESSION_TYPE']=="MemcacheSASL")
			{
				return $this->mem->set("$this->savePath/$sess_id",$data,SESSION_TIME);
			}
			elseif($GLOBALS['distribution_cfg']['SESSION_TYPE']=="Db")
			{
				$session_data = $this->db->getRow("select session_data,session_time from ".$this->table." where session_id = '".$sess_id."'",true);
				if($session_data)
				{
					$session_data['session_data'] = $data;
					$session_data['session_time'] = TIME_UTC+SESSION_TIME;
					$this->db->autoExecute($this->table, $session_data,"UPDATE","session_id = '".$sess_id."'");
				}
				else
				{
					$session_data['session_id'] = $sess_id;
					$session_data['session_data'] = $data;
					$session_data['session_time'] = TIME_UTC+SESSION_TIME;
					$this->db->autoExecute($this->table, $session_data);
				}
				return true;
			}
			else
			{
				return file_put_contents("$this->savePath/$sess_id", $data) === false ? false : true;
			}
		}
	
		function destroy($id)
		{
	
			$sess_id = "sess_".$id;
			if($GLOBALS['distribution_cfg']['SESSION_TYPE']=="MemcacheSASL")
			{
				$this->mem->delete($sess_id);
			}
			elseif($GLOBALS['distribution_cfg']['SESSION_TYPE']=="Db")
			{
				$this->db->query("delete from ".$this->table." where session_id = '".$sess_id."'");
			}
			else
			{
				$file = "$this->savePath/$sess_id";
				if (file_exists($file)) {
					@unlink($file);
				}
			}
			return true;
		}
	
		function gc($maxlifetime)
		{
			if($GLOBALS['distribution_cfg']['SESSION_TYPE']=="MemcacheSASL")
			{
	
			}
			elseif($GLOBALS['distribution_cfg']['SESSION_TYPE']=="Db")
			{
				$this->db->query("delete from ".$this->table." where session_time < ".TIME_UTC);
			}
			else
			{
				foreach (glob("$this->savePath/sess_*") as $file) {
					if (filemtime($file) + SESSION_TIME < time() && file_exists($file)) {
						unlink($file);
					}
				}
			}
			return true;
		}
	}
}


//����session�Ŀ���
if(!function_exists("es_session_start"))
{
	function es_session_start($session_id)
	{
		session_set_cookie_params(0,$GLOBALS['distribution_cfg']['COOKIE_PATH'],$GLOBALS['distribution_cfg']['DOMAIN_ROOT'],false,true);
		if($GLOBALS['distribution_cfg']['SESSION_FILE_PATH']!=""||$GLOBALS['distribution_cfg']['SESSION_TYPE']=="MemcacheSASL"||$GLOBALS['distribution_cfg']['SESSION_TYPE']=="Db")
		{
			$handler = new FanweSessionHandler();
			session_set_save_handler(
			array($handler, 'open'),
			array($handler, 'close'),
			array($handler, 'read'),
			array($handler, 'write'),
			array($handler, 'destroy'),
			array($handler, 'gc')
			);
		}
		if($session_id)
			session_id($session_id);
		@session_start();
	}
}
